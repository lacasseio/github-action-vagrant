description: Run Gradle with Nokee cache
name: Gradle
inputs:
    base-directory:
        description: 'Base directory where box configuration are located, defaults to .github/vagrants'
        required: false
        default: '.github/vagrants'
    name:
        description: 'Blah'
        required: true
    mem:
        description: 'mem'
        required: false
        default: '2048'
    cpus:
        description: 'cpu'
        required: false
        default: '2'
    sync-type:
        description: 'sync'
        required: false
        default: 'rsync'
runs:
    using: composite
    steps:
        -   name: Cache vagrant box
            uses: actions/cache@v2
            id: cache
            with:
                path: ${{ inputs.base-directory }}/${{ inputs.name }}.bak/package.box
                key: ${{ runner.os }}-vagrant-${{ hashFiles(format('{0}/{1}/Vagrantfile', inputs['base-directory'], inputs['name'])) }}

        # TODO: Should have a post action that halt the machine, maybe not as we now export
        -   name: Create vagrant box [cache-miss only]
            if: steps.cache.outputs.cache-hit != 'true'
            shell: bash
            run: |
                vagrant up
                vagrant package --output ${{ github.workspace }}/${{ inputs.base-directory }}/${{ inputs.name }}.bak/package.box
            working-directory: ${{ inputs.base-directory }}/${{ inputs.name }}

        -   name: Import vagrant box
            shell: bash
            run: |
                vagrant box add --force ${{ inputs.name }} package.box
            working-directory: ${{ inputs.base-directory }}/${{ inputs.name }}.bak

        -   name: Provision vagrant box
            shell: bash
            run: |
                run() {
                  printf "\033[0;35m==>\033[0m \033[0;32m%b\n\033[0m" "$*"
                  eval "$*"
                }

                vagrant init ${{ inputs.name }}
                echo 'set -e' > shell.sh
                export -p | grep 'GITHUB_' >> shell.sh
                cat >> shell.sh <<'EOF'
                    echo "cd /home/vagrant/${GITHUB_REPOSITORY}" >> /home/vagrant/.cshrc
                EOF

                cat > Vagrantfile <<EOF
                    Vagrant.configure("2") do |config|
                        config.vm.box = "${{ inputs.name }}"
                        config.vm.provider "virtualbox" do |vb|
                            vb.memory = "${{ inputs.mem }}"
                            vb.cpus = "${{ inputs.cpus }}"
                        end
                        config.vm.synced_folder "${GITHUB_WORKSPACE}", "/home/vagrant/${GITHUB_REPOSITORY}", type: "${{inputs.sync-type}}",
                            rsync__exclude: ["package.box", ".idea", ".gradle"],
                            rsync_args: ["--recursive", "--links", "--times", "--delete", "--compress"],
                            rsync__verbose: true
                        config.vm.provision "shell", path: "shell.sh"
                    end
                EOF

                run cat Vagrantfile
                run cat shell.sh

                run vagrant up --provision
            working-directory: ${{ inputs.base-directory }}/${{ inputs.name }}.bak